[
    {
        "id": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "type": "tab",
        "createdDate": "2022-10-13T07:44:30.284Z",
        "label": "IDserv",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "IDserv",
        "relativeParentPath": ""
    },
    {
        "id": "sd_Hj2XvgfQsiOMPFUO",
        "type": "HttpIn",
        "z": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "viewType": "server",
        "nodeType": "start",
        "name": "",
        "path": "id",
        "uploadpath": "",
        "summary": "API to generate an Unique ID based on a custom input pattern",
        "description": "The following API can be used to generate a unique ID based on a pattern specified by the user. The API can generate alphanumeric ID of a user specified length by passing the argument {alphanumeric:LENGTH} in the body, wherein \"LENGTH\" is to be replaced by a numeric value of the desired  length of the alphanumeric ID to be generated (ex- {alphanumeric:10} generates a 10 character unique alphanumeric ID). The API also supports adding the current date to the generated ID by passing the argument {timestamp:DATEFORMAT}, wherein \"DATEFORMAT\" is to be replaced by a valid Date Format such as \"DDMMYYYY\" , \"MMDDYYYY\", \"YYYYMMDD\" , etc. (ex- {timestamp:DDMMYYYY} would add the current date in the format of DDMMYYYY to the final generated ID). Other than the above arguments , The generated ID can contain any characters that are passed into the api, The order of the generated ID shall be in the same order in which the arguments and other characters are passed into the API.",
        "method": "post",
        "sequenceId": "",
        "consumes": "",
        "produces": "",
        "filetype": "path",
        "acceptFileUpload": false,
        "useDataModel": false,
        "dataModelIsArray": false,
        "erd": "",
        "erdName": "",
        "entity": "",
        "ref": "",
        "editableListData": {
            "responses": [],
            "params": [
                {
                    "key": "pattern",
                    "desc": "The API accepts an Object that must contain a key \"pattern\" followed by its value which is the input pattern based on which the ID is generated. ex- {     \"pattern\" : \" {timestamp:DDMMYYYY}-ABC-{alphanumeric:10}\" }  ",
                    "type": "body",
                    "required": true,
                    "rowId": "sd_uXn9FORuRWrZmqQD",
                    "valid": true
                }
            ],
            "produces": [],
            "consumes": []
        },
        "inputs": 0,
        "outputs": 1,
        "validateRequestUsingSwaggerDocs": false,
        "category": "HTTP",
        "x": 85,
        "y": 60,
        "wires": [
            [
                "sd_YvyDotsrSCXqTGjb"
            ]
        ],
        "__ssdTypeInputs__": {
            "uploadpath": {
                "type": "str",
                "value": "",
                "nullable": "true",
                "nullableValue": "",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "IDserv",
        "functionName": "sd_Hj2XvgfQsiOMPFUO"
    },
    {
        "id": "sd_2mFYr8GgQ6hqISDS",
        "type": "HttpOut",
        "z": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "viewType": "server",
        "nodeType": "flow",
        "name": "",
        "headers": {},
        "responseBody": {
            "type": "bh.input",
            "value": "patternid",
            "ssd_typedInputField": true
        },
        "httpcode": {
            "type": "num",
            "value": 200,
            "ssd_typedInputField": true
        },
        "responseType": "obj",
        "swaggerResponse": {},
        "responseMapping": {
            "status": 200,
            "obj": "bh.input.patternid",
            "send": "bh.input.patternid"
        },
        "dataModelIsArray": false,
        "inputs": 1,
        "outputs": 0,
        "erd": "",
        "entity": "",
        "ref": "",
        "editableListData": {
            "headers": [],
            "produces": [],
            "responses": []
        },
        "cookiesList": {},
        "switchStates": {
            "headers": "Map",
            "cookies": "Map"
        },
        "functionName": "sd_2mFYr8GgQ6hqISDS",
        "category": "HTTP",
        "x": 585,
        "y": 120,
        "wires": [],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "IDserv",
        "generated": true
    },
    {
        "id": "sd_nRpBzUfovwqQ5a2e",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "for (let i = 0; i < bh.splitarr.length; i++) {\n\n    if (bh.splitarr[i].includes('timestamp')) {\n        \n        bh.splitarr[i] = bh.input.InputDateformat;\n    }\n}\n\nbh.input.patternid = bh.splitarr.join('');",
        "functionName": "sd_nRpBzUfovwqQ5a2e",
        "category": "Function",
        "x": 505,
        "y": 100,
        "wires": [
            [
                "sd_2mFYr8GgQ6hqISDS"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "IDserv",
        "generated": true
    },
    {
        "id": "sd_YvyDotsrSCXqTGjb",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "// console.log(bh.input.body['pattern'])\nconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nfunction generateString(length) {\n    let result = '';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nbh.splitarr = bh.input.body['pattern'].split(/({.*?})/g);\n\nfor (let i = 0; i < bh.splitarr.length; i++) {\n   \n    if (bh.splitarr[i].includes('alphanumeric')) {\n        var len = bh.splitarr[i].split(':')[1];\n        bh.splitarr[i] = generateString(parseInt(len));\n    }\n\n    else if (bh.splitarr[i].includes('timestamp')) {\n        bh.input.InputDateformat = bh.splitarr[i].split(':')[1].replace('}', '');\n    }\n    else { console.log(\".\") }\n}\n\nbh.test = new Date();\n",
        "functionName": "sd_YvyDotsrSCXqTGjb",
        "category": "Function",
        "x": 225,
        "y": 60,
        "wires": [
            [
                "sd_Cq6Rc2526nin3lV5"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "IDserv",
        "generated": true
    },
    {
        "id": "sd_iRNGn0aSLEIaG9mn",
        "type": "354466cf-80ff-82f9-5a2a-d61303612450",
        "z": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "inputReference": "bh.res",
        "action": "format",
        "unit": "years",
        "unitFormat": "bh.input.InputDateformat",
        "startDate": "bh",
        "endDate": "bh",
        "resultMapping": "bh.input.InputDateformat",
        "functionName": "sd_iRNGn0aSLEIaG9mn",
        "category": "Date",
        "x": 385,
        "y": 60,
        "wires": [
            [
                "sd_nRpBzUfovwqQ5a2e"
            ]
        ],
        "__ssdTypeInputs__": {
            "inputReference": {
                "type": "bh",
                "value": "res",
                "constant": false
            },
            "unitFormat": {
                "type": "bh.input",
                "value": "InputDateformat",
                "constant": false
            },
            "startDate": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "endDate": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "resultMapping": {
                "type": "bh.input",
                "value": "InputDateformat",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {
            "unit": true,
            "startDate": true,
            "endDate": true
        },
        "generateNext": false,
        "serviceName": "IDserv",
        "generated": true
    },
    {
        "id": "sd_Cq6Rc2526nin3lV5",
        "type": "6bf7e803-907f-9550-90ed-3620ebd2b04e",
        "z": "SSD_SERVICE_ID_sd_0FrKeUOH7UXlT8BD",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "action": "ParseDate",
        "date": "bh",
        "dateFormat": "bh",
        "object": "bh",
        "locale": "bh",
        "array": "bh",
        "dateObject": "bh.test",
        "timestamp": "bh",
        "resultMapping": "bh.res",
        "functionName": "sd_Cq6Rc2526nin3lV5",
        "category": "Date",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "sd_iRNGn0aSLEIaG9mn"
            ]
        ],
        "__ssdTypeInputs__": {
            "date": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "dateFormat": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "object": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "locale": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "array": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "dateObject": {
                "type": "bh",
                "value": "test",
                "constant": false
            },
            "timestamp": {
                "type": "bh",
                "value": "",
                "constant": false
            },
            "resultMapping": {
                "type": "bh",
                "value": "res",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {
            "object": true,
            "array": true,
            "timestamp": true,
            "date": true,
            "dateFormat": true,
            "locale": true
        },
        "generateNext": false,
        "serviceName": "IDserv",
        "generated": true
    }
]
